---
- name: "Setting hostname to 'pihole'"
  hostname:
    name: "rpi"
  tags: admin

- name: "Download Pi-Hole installer"
  get_url:
      url: https://install.pi-hole.net
      dest: ~/install-pihole.sh
      mode: 0740
  tags: pihole

- name: Create pihole configuration directory
  become: True
  file:
    name="{{ fspath_pihole_config }}"
    state=directory
    owner="{{ user_pihole }}"
    group="{{ group_pihole }}"
    mode=0755
  tags: pihole

- name: Create pihole configuration
  become: True
  template:
    src="setupVars.conf.j2"
    dest="{{ fspath_pihole_config }}/setupVars.conf"
    owner=root
    group=root
    mode=0644
  tags: pihole

#- name: Set static IP configuration
#  become: True
#  template:
#    src="etc_network_interfaces.j2"
#    dest="/etc/network/interfaces"
#    owner=root
#    group=root
#    mode=0644
#  tags: pihole

- name: Set default DNS
  become: True
  template:
    src="etc_resolf.conf.j2"
    dest="/etc/resolv.conf"
    owner=root
    group=root
    mode=0644
  tags: admin

- name: Install Pi-Hole
  shell: "~/install-pihole.sh --unattended"
  register: dbg_install_pihole
  failed_when: dbg_install_pihole.rc not in [ 0, 1 ]
  tags: pihole

- name: Install Pi-Hole set password
  shell: "sudo pihole -a -p admin"
  tags: pihole  
  notify: reboot

#- name: Set static IP configuration
#  become: True
#  template:
#    src="etc_network_interfaces.j2"
#    dest="/etc/network/interfaces"
#    owner=root
#    group=root
#    mode=0644
#  tags: admin

- name: Set PiHole to update every week
  become: True
  replace:
    path: /etc/cron.d/pihole
    regexp: '^#(.*updatePihole.*)$'
    replace: '\1'
    backup: yes
  tags: admin

- name: 'Reboot'
  debug:
    msg: "please reboot"
#  shell: sleep 2 && reboot
#  async: 1
#  poll: 0
#  ignore_errors: True
#  tags: pihole

- name: copy external.conf
  copy:
    src: external.conf
    dest: /etc/lighttpd/external.conf  

- name: restart lighttpd
  service:
    name: "{{ lighttpd_service }}"
    state: restarted
    enabled: yes